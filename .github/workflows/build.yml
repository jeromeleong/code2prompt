name: Build and Test

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
          - os: macos-latest
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.arch }}-unknown-${{ matrix.os }}

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Build
      run: cargo build --release --target ${{ matrix.arch }}-unknown-${{ matrix.os }}

    - name: Run tests
      run: cargo test --release --target ${{ matrix.arch }}-unknown-${{ matrix.os }}

    - name: Package binary
      run: |
        mkdir -p release
        zip release/c2p-${{ matrix.arch }}-${{ matrix.os }}.zip target/release/c2p

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: release/c2p-${{ matrix.arch }}-${{ matrix.os }}.zip
        asset_name: c2p-${{ matrix.arch }}-${{ matrix.os }}.zip
        asset_content_type: application/zip